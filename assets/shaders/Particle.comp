#version 450

layout (binding = 0) uniform ParameterUBO {
    mat4 MVP;
    float PointSize;
    float Speed;
} ubo;

struct Particle {
    vec2 pos;
    vec2 vel;
};

layout(std140, binding = 1) readonly buffer ParticleSSBOIn {
   Particle particlesIn[ ];
};

layout(std140, binding = 2) buffer ParticleSSBOOut {
   Particle particlesOut[ ];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void MakePeriodic(inout float pos)
{
    if (pos < -1.0)
        pos += 2.0;
    else if (pos > 1.0)
        pos -= 2.0;
}

void main()
{
    uint index = gl_GlobalInvocationID.x;

    Particle particleIn = particlesIn[index];

    vec2 outPos = particleIn.pos + particleIn.vel.xy * ubo.Speed;
    vec2 outVel = particleIn.vel;

    MakePeriodic(outPos.x);
    MakePeriodic(outPos.y);

    particlesOut[index].pos = outPos;
    particlesOut[index].vel = outVel;
}